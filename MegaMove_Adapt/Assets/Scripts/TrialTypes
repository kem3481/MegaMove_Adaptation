using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class hello : MonoBehaviour
{
    public GameObject cases[];
    public GameObject trials[];

    private Controls controls;

    // Start is called before the first frame update
    void Start()
    {
        /*for (int i = 0; i = 2; i++)
        {
            for(int j = 0; j = 2; j++)
            {
                cases[j + i] = controls.targets[j];
            }

            cases[j + i].transform.position = new Vector3((controls.radii[i] * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.radii[i] * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);
        }*/

        cases[0] = controls.smallOverlap;
        cases[0].transform.position = new Vector3((controls.smallRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.smallRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        cases[1] = controls.smallOverlap;
        cases[1].transform.position = new Vector3((controls.mediumRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.mediumRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        cases[2] = controls.smallOverlap;
        cases[2].transform.position = new Vector3((controls.largeRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.largeRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        cases[3] = controls.mediumOverlap;
        cases[3].transform.position = new Vector3((controls.smallRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.smallRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        cases[4] = controls.mediumOverlap;
        cases[4].transform.position = new Vector3((controls.mediumRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.mediumRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        cases[5] = controls.mediumOverlap;
        cases[5].transform.position = new Vector3((controls.largeRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.largeRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        cases[6] = controls.largeOverlap;
        cases[6].transform.position = new Vector3((controls.smallRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.smallRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        cases[7] = controls.largeOverlap;
        cases[7].transform.position = new Vector3((controls.mediumRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.mediumRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        cases[8] = controls.largeOverlap;
        cases[8].transform.position = new Vector3((controls.largeRadius * Mathf.Cos(angle * (Mathf.PI / 180))), (controls.largeRadius * Mathf.Sin(angle * (Mathf.PI / 180))) + 2.75f, 2.5f);

        for (int j = 0; j < 9; j++)
        {
            for (int i = 0; i < 50; i++)
            {
                trials[i + j] = cases[j];
            }
        }

    }

}
